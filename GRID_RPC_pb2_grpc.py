# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import GRID_RPC_pb2 as GRID__RPC__pb2


class battleServicerStub(object):
    """Services
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.battleGenerator = channel.unary_unary(
                '/battlefield.battleServicer/battleGenerator',
                request_serializer=GRID__RPC__pb2.battleGenerationRequest.SerializeToString,
                response_deserializer=GRID__RPC__pb2.battleGenerationResponse.FromString,
                )
        self.missileLauncher = channel.unary_unary(
                '/battlefield.battleServicer/missileLauncher',
                request_serializer=GRID__RPC__pb2.missileLauncherRequest.SerializeToString,
                response_deserializer=GRID__RPC__pb2.missileLauncherResponse.FromString,
                )
        self.commanderUpdater = channel.unary_unary(
                '/battlefield.battleServicer/commanderUpdater',
                request_serializer=GRID__RPC__pb2.commanderUpdaterRequest.SerializeToString,
                response_deserializer=GRID__RPC__pb2.commanderUpdaterResponse.FromString,
                )
        self.gridUpdater = channel.unary_unary(
                '/battlefield.battleServicer/gridUpdater',
                request_serializer=GRID__RPC__pb2.gridUpdaterRequest.SerializeToString,
                response_deserializer=GRID__RPC__pb2.gridUpdaterResponse.FromString,
                )
        self.printLayout = channel.unary_unary(
                '/battlefield.battleServicer/printLayout',
                request_serializer=GRID__RPC__pb2.printLayoutRequest.SerializeToString,
                response_deserializer=GRID__RPC__pb2.printLayoutResponse.FromString,
                )


class battleServicerServicer(object):
    """Services
    """

    def battleGenerator(self, request, context):
        """Battle Initialization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def missileLauncher(self, request, context):
        """Missile Launch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def commanderUpdater(self, request, context):
        """Upating Commander
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gridUpdater(self, request, context):
        """Updating Grid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def printLayout(self, request, context):
        """Displaying Grid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_battleServicerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'battleGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.battleGenerator,
                    request_deserializer=GRID__RPC__pb2.battleGenerationRequest.FromString,
                    response_serializer=GRID__RPC__pb2.battleGenerationResponse.SerializeToString,
            ),
            'missileLauncher': grpc.unary_unary_rpc_method_handler(
                    servicer.missileLauncher,
                    request_deserializer=GRID__RPC__pb2.missileLauncherRequest.FromString,
                    response_serializer=GRID__RPC__pb2.missileLauncherResponse.SerializeToString,
            ),
            'commanderUpdater': grpc.unary_unary_rpc_method_handler(
                    servicer.commanderUpdater,
                    request_deserializer=GRID__RPC__pb2.commanderUpdaterRequest.FromString,
                    response_serializer=GRID__RPC__pb2.commanderUpdaterResponse.SerializeToString,
            ),
            'gridUpdater': grpc.unary_unary_rpc_method_handler(
                    servicer.gridUpdater,
                    request_deserializer=GRID__RPC__pb2.gridUpdaterRequest.FromString,
                    response_serializer=GRID__RPC__pb2.gridUpdaterResponse.SerializeToString,
            ),
            'printLayout': grpc.unary_unary_rpc_method_handler(
                    servicer.printLayout,
                    request_deserializer=GRID__RPC__pb2.printLayoutRequest.FromString,
                    response_serializer=GRID__RPC__pb2.printLayoutResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'battlefield.battleServicer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class battleServicer(object):
    """Services
    """

    @staticmethod
    def battleGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/battlefield.battleServicer/battleGenerator',
            GRID__RPC__pb2.battleGenerationRequest.SerializeToString,
            GRID__RPC__pb2.battleGenerationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def missileLauncher(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/battlefield.battleServicer/missileLauncher',
            GRID__RPC__pb2.missileLauncherRequest.SerializeToString,
            GRID__RPC__pb2.missileLauncherResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def commanderUpdater(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/battlefield.battleServicer/commanderUpdater',
            GRID__RPC__pb2.commanderUpdaterRequest.SerializeToString,
            GRID__RPC__pb2.commanderUpdaterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def gridUpdater(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/battlefield.battleServicer/gridUpdater',
            GRID__RPC__pb2.gridUpdaterRequest.SerializeToString,
            GRID__RPC__pb2.gridUpdaterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def printLayout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/battlefield.battleServicer/printLayout',
            GRID__RPC__pb2.printLayoutRequest.SerializeToString,
            GRID__RPC__pb2.printLayoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
